{"version":3,"sources":["assets/frames/welcome_poster.png","assets/logo/pbs_logo.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","place","sponser","data","setData","photo","setPhoto","imgRef","useRef","previewCanvasRef","unit","width","aspect","crop","setCrop","completedCrop","setCompletedCrop","onChangeData","d","value","onLoad","useCallback","img","current","useEffect","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","height","ctx","getContext","window","devicePixelRatio","imageSmoothingQuality","Image","src","welcomeFrame","onload","drawImage","fillStyle","font","fillText","toLocaleUpperCase","x","y","className","logo","Container","fluid","Form","Group","controlId","Label","Select","onChange","e","selected","Control","type","placeholder","currentTarget","target","accept","disabled","files","URL","createObjectURL","onChangePhoto","keepSelection","onImageLoaded","c","onComplete","ref","style","Button","variant","onClick","toBlob","blob","previewUrl","anchor","document","createElement","download","href","click","revokeObjectURL","generateDownload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fe27eaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/welcome_poster.528fed64.png\";","export default __webpack_public_path__ + \"static/media/pbs_logo.fc562c9d.png\";","\nimport './App.css';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { useState, useCallback, useRef, useEffect } from 'react';\n\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nimport welcomeFrame  from './assets/frames/welcome_poster.png';\nimport logo from \"./assets/logo/pbs_logo.png\";\n\n\nfunction generateDownload(canvas, crop) {\n  if (!crop || !canvas) {\n    return;\n  }\n\n  canvas.toBlob(\n    (blob) => {\n      const previewUrl = window.URL.createObjectURL(blob);\n\n      const anchor = document.createElement('a');\n      anchor.download = 'poster.png';\n      anchor.href = URL.createObjectURL(blob);\n      anchor.click();\n\n      window.URL.revokeObjectURL(previewUrl);\n    },\n    'image/png',\n    1\n  );\n}\n\nfunction App() {\n\n  const [data, setData] = useState({\n    name: '',\n    place: '',\n    sponser: ''\n  })\n  \n  \n  const [photo, setPhoto] = useState()\n\n  const imgRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [crop, setCrop] = useState({ unit: 'px', width: 200, aspect: 3 / 4 });\n  const [completedCrop, setCompletedCrop] = useState(null);\n\n  const onChangeData = (d) => {\n    setData({\n      ...data,\n      [d.name]: d.value\n    });\n\n    \n    \n  }\n  \n  const onChangeOption = (d) => {\n    \n  }\n\n \n\n  const onChangePhoto = (e) => {\n\n    if(e.target.files && e.target.files[0]){\n      setPhoto(URL.createObjectURL(e.target.files[0]))\n    }\n  }\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img;\n  }, []);\n\n  useEffect(() => {\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return;\n    }\n    const image = imgRef.current;\n    const canvas = previewCanvasRef.current;\n    const crop = completedCrop;\n\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    const ctx = canvas.getContext('2d');\n    const pixelRatio = window.devicePixelRatio;\n\n    // canvas.width = crop.width * pixelRatio * scaleX;\n    // canvas.height = crop.height * pixelRatio * scaleY;\n\n    canvas.width = 1200;\n    canvas.height = 1200;\n\n    // ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = 'high';\n    let img = new Image();\n    img.src = welcomeFrame;\n    img.onload = () => {\n      ctx.drawImage(img,0,0,canvas.width,canvas.width)\n      ctx.fillStyle = '#fff'\n      ctx.font = '700 26px Montserrat'\n      ctx.fillText(data.name.toLocaleUpperCase(),  830, 690)\n      ctx.font = '600 24px Montserrat'\n      ctx.fillText(data.place.toLocaleUpperCase(),  830, 720)\n      ctx.font = '600 24px Montserrat'\n      ctx.fillStyle = '#0f3d54'\n      ctx.fillText(data.sponser.toLocaleUpperCase(),  27, 1150)\n    }\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      445,\n      0,\n      800,\n      1066\n    );\n    \n    \n    \n    \n  }, [completedCrop]);\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"Navbar-container\">\n        <img src={logo} width=\"70px\"/>\n          <h4>PRAVEEN BUSINESS SCHOOL</h4>\n      </div>\n      <Container fluid=\"md\" className=\"form-container\">\n        <Form >\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Poster type</Form.Label>\n            <Form.Select onChange={(e) => onChangeOption(e)}>\n            <option>choose option..</option>\n            <option value=\"1\" selected>Welcome Poster</option>\n          </Form.Select>\n          </Form.Group>\n          \n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Name\" name=\"name\"\n            value={data.name} onChange={(e) => onChangeData(e.currentTarget)}/>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\n            <Form.Label>Place</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Place\" name=\"place\" \n            value={data.place} onChange={(e) => onChangeData(e.target)}/>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\n            <Form.Label>Sponser Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Sponser Name\" name=\"sponser\" \n            value={data.sponser} onChange={(e) => onChangeData(e.target)}/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formFile\" className=\"mb-3\">\n            <Form.Label>choose photo</Form.Label>\n            <Form.Control type=\"file\" accept=\"image/png, image/jpeg\"\n            disabled={!data.name || !data.place || !data.sponser }\n            onChange={(e)=> onChangePhoto(e)}/>\n          </Form.Group>\n          {\n            photo &&\n              <>\n              <ReactCrop\n            src={photo}\n            keepSelection\n            onImageLoaded={onLoad}\n            crop={crop}\n            onChange={(c) => setCrop(c)}\n            onComplete={(c) => setCompletedCrop(c)}\n            />\n            <div className=\"frame-container\">\n              <canvas\n                ref={previewCanvasRef} style={{\n                  width: '100%',\n                }}\n              />\n            </div>\n           </>\n          }\n          \n          <Button variant=\"primary\" \n          disabled={!completedCrop?.width || !completedCrop?.height}\n          onClick={()=> generateDownload(previewCanvasRef.current, completedCrop)}>Download</Button>\n        </Form>\n        \n        \n      </Container>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}